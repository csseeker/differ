<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Differ.Core</name>
    </assembly>
    <members>
        <member name="T:Differ.Core.Interfaces.IDirectoryComparisonService">
            <summary>
            Defines the contract for the main directory comparison service
            </summary>
        </member>
        <member name="M:Differ.Core.Interfaces.IDirectoryComparisonService.CompareDirectoriesAsync(System.String,System.String,System.Threading.CancellationToken,System.IProgress{System.String})">
            <summary>
            Compares two directories asynchronously
            </summary>
            <param name="leftDirectoryPath">Path to the first directory</param>
            <param name="rightDirectoryPath">Path to the second directory</param>
            <param name="cancellationToken">Token to cancel the operation</param>
            <param name="progress">Progress reporter for the comparison operation</param>
            <returns>An operation result containing the comparison results</returns>
        </member>
        <member name="T:Differ.Core.Interfaces.IDirectoryScanner">
            <summary>
            Defines the contract for scanning directories and retrieving file system items
            </summary>
        </member>
        <member name="M:Differ.Core.Interfaces.IDirectoryScanner.ScanDirectoryAsync(System.String,System.Threading.CancellationToken,System.IProgress{System.String})">
            <summary>
            Scans a directory asynchronously and returns all file system items
            </summary>
            <param name="directoryPath">The path to the directory to scan</param>
            <param name="cancellationToken">Token to cancel the operation</param>
            <param name="progress">Progress reporter for the scanning operation</param>
            <returns>An operation result containing the list of file system items</returns>
        </member>
        <member name="M:Differ.Core.Interfaces.IDirectoryScanner.ValidateDirectoryPath(System.String)">
            <summary>
            Validates that a directory path exists and is accessible
            </summary>
            <param name="directoryPath">The path to validate</param>
            <returns>An operation result indicating success or failure</returns>
        </member>
        <member name="T:Differ.Core.Interfaces.IFileComparer">
            <summary>
            Defines the contract for comparing files using different algorithms
            </summary>
        </member>
        <member name="P:Differ.Core.Interfaces.IFileComparer.Name">
            <summary>
            Gets the name of this file comparison algorithm
            </summary>
        </member>
        <member name="P:Differ.Core.Interfaces.IFileComparer.Description">
            <summary>
            Gets a description of what this comparer does
            </summary>
        </member>
        <member name="M:Differ.Core.Interfaces.IFileComparer.CompareFilesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Compares two files asynchronously
            </summary>
            <param name="leftFilePath">Path to the first file</param>
            <param name="rightFilePath">Path to the second file</param>
            <param name="cancellationToken">Token to cancel the operation</param>
            <returns>True if files are identical, false if different</returns>
        </member>
        <member name="M:Differ.Core.Interfaces.IFileComparer.CanCompare(System.String,System.String)">
            <summary>
            Determines if this comparer can handle the given file types
            </summary>
            <param name="leftFilePath">Path to the first file</param>
            <param name="rightFilePath">Path to the second file</param>
            <returns>True if this comparer can handle these files</returns>
        </member>
        <member name="T:Differ.Core.Interfaces.ITextDiffService">
            <summary>
            Defines the contract for producing human-readable differences between two text files.
            </summary>
        </member>
        <member name="M:Differ.Core.Interfaces.ITextDiffService.CanDiff(System.String,System.String)">
            <summary>
            Determines whether the service can compute a diff for the supplied paths.
            </summary>
            <param name="leftFilePath">The path to the left (original) file.</param>
            <param name="rightFilePath">The path to the right (modified) file.</param>
            <returns><c>true</c> if the service can diff the files; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Differ.Core.Interfaces.ITextDiffService.ComputeDiffAsync(Differ.Core.Models.TextDiffRequest,System.Threading.CancellationToken,System.IProgress{System.Double})">
            <summary>
            Produces a textual diff for the supplied request.
            </summary>
            <param name="request">The diff request.</param>
            <param name="cancellationToken">Token used to cancel the diff operation.</param>
            <param name="progress">Optional progress reporter that will be invoked with values in the range [0, 1].</param>
            <returns>An <see cref="T:Differ.Core.Models.OperationResult`1"/> containing the diff outcome.</returns>
        </member>
        <member name="T:Differ.Core.Models.FileSystemItem">
            <summary>
            Represents information about a file system item (file or directory)
            </summary>
        </member>
        <member name="P:Differ.Core.Models.FileSystemItem.FullPath">
            <summary>
            Gets the full path to the item
            </summary>
        </member>
        <member name="P:Differ.Core.Models.FileSystemItem.Name">
            <summary>
            Gets the name of the item (filename or directory name)
            </summary>
        </member>
        <member name="P:Differ.Core.Models.FileSystemItem.IsDirectory">
            <summary>
            Gets a value indicating whether this item is a directory
            </summary>
        </member>
        <member name="P:Differ.Core.Models.FileSystemItem.Size">
            <summary>
            Gets the size of the file in bytes (null for directories)
            </summary>
        </member>
        <member name="P:Differ.Core.Models.FileSystemItem.LastModified">
            <summary>
            Gets the last modified date of the item
            </summary>
        </member>
        <member name="P:Differ.Core.Models.FileSystemItem.RelativePath">
            <summary>
            Gets the relative path from the root comparison directory
            </summary>
        </member>
        <member name="T:Differ.Core.Models.ComparisonStatus">
            <summary>
            Represents the status of a file system item in comparison
            </summary>
        </member>
        <member name="F:Differ.Core.Models.ComparisonStatus.LeftOnly">
            <summary>
            Item exists only in the left directory
            </summary>
        </member>
        <member name="F:Differ.Core.Models.ComparisonStatus.RightOnly">
            <summary>
            Item exists only in the right directory
            </summary>
        </member>
        <member name="F:Differ.Core.Models.ComparisonStatus.Identical">
            <summary>
            Item exists in both directories and is identical
            </summary>
        </member>
        <member name="F:Differ.Core.Models.ComparisonStatus.Different">
            <summary>
            Item exists in both directories but differs
            </summary>
        </member>
        <member name="F:Differ.Core.Models.ComparisonStatus.Error">
            <summary>
            Item comparison failed due to error
            </summary>
        </member>
        <member name="T:Differ.Core.Models.ComparisonItem">
            <summary>
            Represents a comparison result for a single file system item
            </summary>
        </member>
        <member name="P:Differ.Core.Models.ComparisonItem.RelativePath">
            <summary>
            Gets the relative path of the item being compared
            </summary>
        </member>
        <member name="P:Differ.Core.Models.ComparisonItem.LeftItem">
            <summary>
            Gets the item from the left directory (null if doesn't exist)
            </summary>
        </member>
        <member name="P:Differ.Core.Models.ComparisonItem.RightItem">
            <summary>
            Gets the item from the right directory (null if doesn't exist)
            </summary>
        </member>
        <member name="P:Differ.Core.Models.ComparisonItem.Status">
            <summary>
            Gets the comparison status
            </summary>
        </member>
        <member name="P:Differ.Core.Models.ComparisonItem.ErrorMessage">
            <summary>
            Gets any error message from comparison (for Error status)
            </summary>
        </member>
        <member name="P:Differ.Core.Models.ComparisonItem.IsDirectory">
            <summary>
            Gets a value indicating whether this item is a directory
            </summary>
        </member>
        <member name="T:Differ.Core.Models.DirectoryComparisonResult">
            <summary>
            Represents the complete result of a directory comparison
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DirectoryComparisonResult.LeftPath">
            <summary>
            Gets the path of the left directory
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DirectoryComparisonResult.RightPath">
            <summary>
            Gets the path of the right directory
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DirectoryComparisonResult.Items">
            <summary>
            Gets the comparison items
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DirectoryComparisonResult.ComparisonTime">
            <summary>
            Gets the timestamp when the comparison was performed
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DirectoryComparisonResult.Summary">
            <summary>
            Gets summary statistics for the comparison
            </summary>
        </member>
        <member name="T:Differ.Core.Models.ComparisonSummary">
            <summary>
            Provides summary statistics for a directory comparison
            </summary>
        </member>
        <member name="P:Differ.Core.Models.ComparisonSummary.TotalItems">
            <summary>
            Gets the total number of items compared
            </summary>
        </member>
        <member name="P:Differ.Core.Models.ComparisonSummary.IdenticalItems">
            <summary>
            Gets the number of identical items
            </summary>
        </member>
        <member name="P:Differ.Core.Models.ComparisonSummary.DifferentItems">
            <summary>
            Gets the number of different items
            </summary>
        </member>
        <member name="P:Differ.Core.Models.ComparisonSummary.LeftOnlyItems">
            <summary>
            Gets the number of items that exist only in the left directory
            </summary>
        </member>
        <member name="P:Differ.Core.Models.ComparisonSummary.RightOnlyItems">
            <summary>
            Gets the number of items that exist only in the right directory
            </summary>
        </member>
        <member name="P:Differ.Core.Models.ComparisonSummary.ErrorItems">
            <summary>
            Gets the number of items that had comparison errors
            </summary>
        </member>
        <member name="T:Differ.Core.Models.OperationResult`1">
            <summary>
            Represents the result of an operation with success/error state
            </summary>
            <typeparam name="T">The type of data returned on success</typeparam>
        </member>
        <member name="P:Differ.Core.Models.OperationResult`1.IsSuccess">
            <summary>
            Gets a value indicating whether the operation was successful
            </summary>
        </member>
        <member name="P:Differ.Core.Models.OperationResult`1.Data">
            <summary>
            Gets the data returned by the operation (null if failed)
            </summary>
        </member>
        <member name="P:Differ.Core.Models.OperationResult`1.ErrorMessage">
            <summary>
            Gets the error message if the operation failed
            </summary>
        </member>
        <member name="P:Differ.Core.Models.OperationResult`1.Exception">
            <summary>
            Gets the exception that caused the failure (if any)
            </summary>
        </member>
        <member name="M:Differ.Core.Models.OperationResult`1.Success(`0)">
            <summary>
            Creates a successful result with data
            </summary>
            <param name="data">The data to return</param>
            <returns>A successful operation result</returns>
        </member>
        <member name="M:Differ.Core.Models.OperationResult`1.Failure(System.String,System.Exception)">
            <summary>
            Creates a failed result with an error message
            </summary>
            <param name="errorMessage">The error message</param>
            <param name="exception">The exception that caused the failure (optional)</param>
            <returns>A failed operation result</returns>
        </member>
        <member name="T:Differ.Core.Models.OperationResult">
            <summary>
            Represents the result of an operation without return data
            </summary>
        </member>
        <member name="P:Differ.Core.Models.OperationResult.IsSuccess">
            <summary>
            Gets a value indicating whether the operation was successful
            </summary>
        </member>
        <member name="P:Differ.Core.Models.OperationResult.ErrorMessage">
            <summary>
            Gets the error message if the operation failed
            </summary>
        </member>
        <member name="P:Differ.Core.Models.OperationResult.Exception">
            <summary>
            Gets the exception that caused the failure (if any)
            </summary>
        </member>
        <member name="M:Differ.Core.Models.OperationResult.Success">
            <summary>
            Creates a successful result
            </summary>
            <returns>A successful operation result</returns>
        </member>
        <member name="M:Differ.Core.Models.OperationResult.Failure(System.String,System.Exception)">
            <summary>
            Creates a failed result with an error message
            </summary>
            <param name="errorMessage">The error message</param>
            <param name="exception">The exception that caused the failure (optional)</param>
            <returns>A failed operation result</returns>
        </member>
        <member name="T:Differ.Core.Models.TextDiffRequest">
            <summary>
            Represents a request to compute the differences between two text files.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.TextDiffRequest.LeftFilePath">
            <summary>
            Gets or sets the full path to the file that is considered the left (or original) side.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.TextDiffRequest.RightFilePath">
            <summary>
            Gets or sets the full path to the file that is considered the right (or modified) side.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.TextDiffRequest.IgnoreWhitespace">
            <summary>
            Gets or sets a value indicating whether whitespace differences should be ignored.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.TextDiffRequest.IgnoreCase">
            <summary>
            Gets or sets a value indicating whether character casing differences should be ignored.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.TextDiffRequest.ContextLineCount">
            <summary>
            Gets or sets the number of unchanged context lines to include around differences.
            </summary>
            <remarks>
            The current implementation includes all lines, but this value enables future optimisation.
            </remarks>
        </member>
        <member name="T:Differ.Core.Models.DiffLine">
            <summary>
            Represents a single line within a diff result.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DiffLine.ChangeKind">
            <summary>
            Gets the type of change associated with this line.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DiffLine.LeftLineNumber">
            <summary>
            Gets the (1-based) line number in the left file, if applicable.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DiffLine.LeftText">
            <summary>
            Gets the text for the left file line, if available.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DiffLine.RightLineNumber">
            <summary>
            Gets the (1-based) line number in the right file, if applicable.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DiffLine.RightText">
            <summary>
            Gets the text for the right file line, if available.
            </summary>
        </member>
        <member name="T:Differ.Core.Models.DiffSummary">
            <summary>
            Provides summary statistics for a text diff operation.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DiffSummary.TotalLines">
            <summary>
            Gets the total number of lines in the diff output.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DiffSummary.UnchangedLines">
            <summary>
            Gets the number of unchanged (context) lines.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DiffSummary.AddedLines">
            <summary>
            Gets the number of added lines.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DiffSummary.RemovedLines">
            <summary>
            Gets the number of removed lines.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.DiffSummary.ModifiedLines">
            <summary>
            Gets the number of modified lines.
            </summary>
        </member>
        <member name="T:Differ.Core.Models.TextDiffResult">
            <summary>
            Represents the result of a text diff operation.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.TextDiffResult.LeftFilePath">
            <summary>
            Gets the path of the left file involved in the diff.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.TextDiffResult.RightFilePath">
            <summary>
            Gets the path of the right file involved in the diff.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.TextDiffResult.Lines">
            <summary>
            Gets the collection of diff lines representing the comparison outcome.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.TextDiffResult.Summary">
            <summary>
            Gets the summary statistics for this diff.
            </summary>
        </member>
        <member name="P:Differ.Core.Models.TextDiffResult.HasDifferences">
            <summary>
            Gets a value indicating whether the diff detected any differences.
            </summary>
        </member>
        <member name="T:Differ.Core.Models.LineChangeKind">
            <summary>
            Describes the type of change detected for a diff line.
            </summary>
        </member>
        <member name="F:Differ.Core.Models.LineChangeKind.Unchanged">
            <summary>
            The line is unchanged between the files.
            </summary>
        </member>
        <member name="F:Differ.Core.Models.LineChangeKind.Added">
            <summary>
            The line exists only in the right file (added).
            </summary>
        </member>
        <member name="F:Differ.Core.Models.LineChangeKind.Removed">
            <summary>
            The line exists only in the left file (removed).
            </summary>
        </member>
        <member name="F:Differ.Core.Models.LineChangeKind.Modified">
            <summary>
            The line exists in both files but has been modified.
            </summary>
        </member>
        <member name="T:Differ.Core.Services.DirectoryComparisonService">
            <summary>
            Main service for comparing directories
            </summary>
        </member>
        <member name="M:Differ.Core.Services.DirectoryComparisonService.#ctor(Differ.Core.Interfaces.IDirectoryScanner,Differ.Core.Interfaces.IFileComparer,Microsoft.Extensions.Logging.ILogger{Differ.Core.Services.DirectoryComparisonService})">
            <summary>
            Initializes a new instance of the DirectoryComparisonService class
            </summary>
            <param name="directoryScanner">The directory scanner service</param>
            <param name="fileComparer">The file comparer service</param>
            <param name="logger">The logger instance</param>
        </member>
        <member name="M:Differ.Core.Services.DirectoryComparisonService.CompareDirectoriesAsync(System.String,System.String,System.Threading.CancellationToken,System.IProgress{System.String})">
            <inheritdoc />
        </member>
        <member name="T:Differ.Core.Services.DirectoryScanner">
            <summary>
            Default implementation of directory scanning service
            </summary>
        </member>
        <member name="M:Differ.Core.Services.DirectoryScanner.#ctor(Microsoft.Extensions.Logging.ILogger{Differ.Core.Services.DirectoryScanner})">
            <summary>
            Initializes a new instance of the DirectoryScanner class
            </summary>
            <param name="logger">The logger instance</param>
        </member>
        <member name="M:Differ.Core.Services.DirectoryScanner.ScanDirectoryAsync(System.String,System.Threading.CancellationToken,System.IProgress{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Differ.Core.Services.DirectoryScanner.ValidateDirectoryPath(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Differ.Core.Services.HashFileComparer">
            <summary>
            Hash-based file comparer that compares files by computing their SHA-256 hashes
            </summary>
        </member>
        <member name="M:Differ.Core.Services.HashFileComparer.#ctor(Microsoft.Extensions.Logging.ILogger{Differ.Core.Services.HashFileComparer})">
            <summary>
            Initializes a new instance of the HashFileComparer class
            </summary>
            <param name="logger">The logger instance</param>
        </member>
        <member name="P:Differ.Core.Services.HashFileComparer.Name">
            <inheritdoc />
        </member>
        <member name="P:Differ.Core.Services.HashFileComparer.Description">
            <inheritdoc />
        </member>
        <member name="M:Differ.Core.Services.HashFileComparer.CanCompare(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Differ.Core.Services.HashFileComparer.CompareFilesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Differ.Core.Services.TextDiffService">
            <summary>
            Provides a line-oriented text diff implementation with optional preprocessing rules.
            </summary>
        </member>
        <member name="M:Differ.Core.Services.TextDiffService.#ctor(Microsoft.Extensions.Logging.ILogger{Differ.Core.Services.TextDiffService})">
            <summary>
            Initializes a new instance of the <see cref="T:Differ.Core.Services.TextDiffService"/> class.
            </summary>
            <param name="logger">The logger instance.</param>
        </member>
        <member name="M:Differ.Core.Services.TextDiffService.CanDiff(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Differ.Core.Services.TextDiffService.ComputeDiffAsync(Differ.Core.Models.TextDiffRequest,System.Threading.CancellationToken,System.IProgress{System.Double})">
            <inheritdoc />
        </member>
    </members>
</doc>
